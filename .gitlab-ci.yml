stages:             # these stages (jobs) forms the CICD pipeline
  - mavenbuild      # this is a JOB to build your Springboot application
  - maventest       # this is a JOB to run tests in your Springboot application (it's okay you don't have any test for now)
  - mavendeploy     # this is a JOB to deploy your Springboot application on your server
  - androidbuild    # this is a JOB to build your Android application
  - androidtest     # this is a JOB to run tests in your Android application (it's okay you don't have any test for now)

maven-build:            
  stage: mavenbuild     # one of the stages listed above
  tags:                 # to specify which runner to execute this job
    - spring    # change to your runner's tag
  script:               # what to execute for this job
    - cd Backend        # change 'Backend' to to where you have the pom.xml (do not add / in the beginning)
    - mvn package       # maven package
  artifacts:            # where to output the packaged jar file, change 'Backend' to to where you have the pom.xml
    paths:
    - Backend/target/*.jar

maven-test:             
   stage: maventest     # one of the stages listed above
   tags:
     - spring   # change to your runner's tag
   script:
     - cd Backend       # change 'Backend' to to where you have the pom.xml (do not add / in the beginning)
     - mvn test         # maven test

auto-deploy:
  stage: mavendeploy    # one of the stages listed above
  tags:
  - spring      # change to your runner's tag
  script:               # script to run the deployment service you created
    - cd Backend        # change 'Backend' to to where you have the pom.xml (do not add / in the beginning)
    - sudo mv target/*.jar /target/web-demo.jar 
    - sudo systemctl stop system-web-demo
    - sudo systemctl start system-web-demo

android-build:
  image: gjandres/android-ci:latest # Docker image that has Android environments installed    
  stage: androidbuild               # one of the stages listed above
  tags:
   - android                    # change to your runner's tag
  before_script:                    # enable gradlew, change 'Frontend' to where you have 'gradlew'
    - export JAVA_HOME="/usr/lib/jvm/java-17-openjdk-amd64"
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - chmod +x ./Frontend/dinder/gradlew
  script:
    - cd Frontend/dinder                    # change 'Frontend' to where you have 'gradlew' (do not add / in the beginning)
    - ./gradlew build               # gradle build

android-test:
   image: gjandres/android-ci:latest
   stage: androidtest               # one of the stages listed above
   tags:
    - android                   # change to your runner's tag
   before_script:                   # enable gradlew, change 'Frontend' to where you have 'gradlew'
     - export GRADLE_USER_HOME=`pwd`/.gradle
     - chmod +x ./Frontend/gradlew
   script:
     - cd Frontend/dinder                  # change 'Frontend' to where you have 'gradlew' (do not add / in the beginning)
     - ./gradlew test               # gradle test
